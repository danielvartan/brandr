[{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official email address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement danvartan@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to brandr","title":"Contributing to brandr","text":"First , thanks considering contributing brandr! 👍 ’s people like make rewarding us—project maintainers—work brandr. 😊 brandr open source project, maintained people care. directly funded .","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to brandr","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"how-you-can-contribute","dir":"","previous_headings":"","what":"How You Can Contribute","title":"Contributing to brandr","text":"several ways can contribute project. want know contribute open source projects like one, see Open Source Guide.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"share-the-love-️","dir":"","previous_headings":"How You Can Contribute","what":"Share the Love ❤️","title":"Contributing to brandr","text":"Think brandr useful? Help others discover sharing person, social media, blog post. Don’t forget star GitHub repository! Using brandr paper writing? Consider citing .","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"propose-an-idea-","dir":"","previous_headings":"How You Can Contribute","what":"Propose an Idea 💡","title":"Contributing to brandr","text":"idea new brandr feature? Take look documentation issue list see isn’t included suggested yet. , suggest idea issue GitHub. can’t promise implement idea, helps : Explain detail work Keep scope narrow possible See want contribute code idea well.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"report-a-bug-","dir":"","previous_headings":"How You Can Contribute","what":"Report a Bug 🐛","title":"Contributing to brandr","text":"Using brandr discovered bug? ’s annoying! Don’t let others experience report issue GitHub can fix . good bug report makes easier us , please include: content utils::sessionInfo() (Tip: use reprex package) details local setup might helpful troubleshooting Detailed steps reproduce bug","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"improve-the-documentation-","dir":"","previous_headings":"How You Can Contribute","what":"Improve the Documentation 📖","title":"Contributing to brandr","text":"Noticed typo website? Think function use better example? Good documentation makes difference, help improve welcome!","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"the-website","dir":"","previous_headings":"How You Can Contribute > Improve the Documentation 📖","what":"The Website","title":"Contributing to brandr","text":"website generated pkgdown. means don’t write html: Content pulled together documentation code, vignettes, Markdown files, package DESCRIPTION _pkgdown.yml settings. know way around pkgdown, can propose file change improve documentation.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"function-documentation","dir":"","previous_headings":"How You Can Contribute > Improve the Documentation 📖","what":"Function Documentation","title":"Contributing to brandr","text":"Functions described comments near code translated documentation using roxygen2. want improve function description: Go R directory code repository Look file function Propose file change update function documentation roxygen comments (starting #')","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"contribute-code-","dir":"","previous_headings":"How You Can Contribute","what":"Contribute Code 📝","title":"Contributing to brandr","text":"Care fix bugs implement new functionality brandr? Awesome! 👏 look issue list leave comment things want work . See also development guidelines .","code":""},{"path":"https://danielvartan.github.io/brandr/dev/CONTRIBUTING.html","id":"development-guidelines","dir":"","previous_headings":"","what":"Development Guidelines","title":"Contributing to brandr","text":"try follow GitHub flow development. steps contribute: Fork repository clone computer. learn process, see guide. forked cloned project since worked , pull changes original repo clone using git pull upstream main Open project RStudio IDE choice Write code Test code (Bonus points adding unit tests) Document code (See function documentation ) Check code devtools::check() aim 0 errors, warnings notes Commit push changes Submit pull request Also note project use Tidyverse design principles Tidyverse style guide. code must conform principles rules.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Daniel Vartanian Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Vartanian. Author, maintainer, conceptor, copyright holder.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vartanian, D. (2025). {brandr}: Brand identity management using brand.yml standard [Computer software - R package]. CRAN. https://doi.org/10.32614/CRAN.package.brandr","code":"@Misc{,   title = {{brandr}: Brand identity management using brand.yml standard},   author = {Daniel Vartanian},   year = {2025},   publisher = {CRAN},   doi = {10.32614/CRAN.package.brandr},   note = {R package}, }"},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Brand Identity Management Using brand.yml Standard","text":"brandr R package designed facilitate brand identity management using brand.yml standard. provides functions consistently access apply brand colors, typography, visual elements across R projects. Unlike Posit’s thematic package, brandr offers refined control brand assets. find project useful, please consider giving star!   Please note brandr affiliated Posit developers brand.yml.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Brand Identity Management Using brand.yml Standard","text":"can install released version brandr CRAN : development version GitHub :","code":"install.packages(\"brandr\") # install.packages(\"remotes\") remotes::install_github(\"danielvartan/brandr\")"},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Brand Identity Management Using brand.yml Standard","text":"brandr equipped several functions help use _brand.yml file, like: color_brand_sequential(), color_brand_diverging(), color_brand_qualitative(): Sequential, diverging, qualitative brand color palettes scale_brand(), scale_color_brand_d(), scale_color_brand_c(), scale_color_brand_b(), scale_fill_brand_d(), scale_fill_brand_c(), scale_fill_brand_b(): Discrete, continuous, binned brand color scales ggplot2 get_brand_color(): Get brand color name (e.g., primary) get_brand_color_tint(): Get brand color tint get_brand_color_mix(): Get mix brand colors get_brand_font(): Get brand font name (e.g., headings) Example:  Click see full list.","code":"library(brandr) library(ggplot2) library(palmerpenguins)  penguins |>   ggplot(aes(x = flipper_length_mm, fill = species)) +     geom_histogram(alpha = 0.5, position = \"identity\") +     scale_fill_brand_d() +     labs(       x = \"Flipper Length (mm)\",       y = \"Frequency\",       fill = \"Species\"     )"},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"path-to-_brandyml","dir":"","previous_headings":"Configuration","what":"Path to _brand.yml","title":"Brand Identity Management Using brand.yml Standard","text":"brandr always look _brand.yml file root directory project. file found, error message displayed. can also set path file manually using options() function:","code":"options(BRANDR_BRAND_YML = \"PATH_TO_BRAND.YML\")"},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"brand-color-scales","dir":"","previous_headings":"Configuration","what":"Brand Color Scales","title":"Brand Identity Management Using brand.yml Standard","text":"control colors brand color scale, assign hexadecimal color codes character vector following options: BRANDR_COLOR_SEQUENTIAL: sequential color scales BRANDR_COLOR_DIVERGING: diverging color scales BRANDR_COLOR_QUALITATIVE: qualitative color scales can use get_brand_color() get hexadecimal color codes _brand.yml file. Example:","code":"options(  BRANDR_COLOR_SEQUENTIAL =    get_brand_color(c(\"primary\", \"secondary\")),  BRANDR_COLOR_DIVERGING =    get_brand_color(c(\"primary\", \"white\", \"secondary\")),  BRANDR_COLOR_QUALITATIVE =    get_brand_color(c(\"primary\", \"secondary\", \"tertiary\")) )"},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"setting-brand-fontstypefaces","dir":"","previous_headings":"","what":"Setting Brand Fonts/Typefaces","title":"Brand Identity Management Using brand.yml Standard","text":"Currently, brandr support use custom fonts directly. feature planned future releases. meantime, can use Yixuan Qiu’s showtext R package apply custom fonts/typefaces plots. example use Google Font Open Sans plots. example assumes font files located ttf folder within project directory.","code":"library(brandr) library(ggplot2) library(here) library(sysfonts) library(showtext)  font_paths(here(\"ttf\"))  font_add(   family = \"open-sans\",   regular = here(\"ttf\", \"opensans-regular.ttf\"),   bold = here(\"ttf\", \"opensans-bold.ttf\"),   italic = here(\"ttf\", \"opensans-italic.ttf\"),   bolditalic = here(\"ttf\", \"opensans-bolditalic.ttf\"),   symbol = NULL )  showtext_auto()  theme_set(   theme(     text = element_text(       color = get_brand_color(\"black\"),       family = \"open-sans\",       face = \"plain\"     )   ) )"},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Brand Identity Management Using brand.yml Standard","text":"brandr code released MIT license.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Brand Identity Management Using brand.yml Standard","text":"Contributions welcome, including bug reports. Take moment review Guidelines Contributing.  can also support development brandr becoming sponsor. Click make donation. Please mention brandr donation message.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Brand Identity Management Using brand.yml Standard","text":"brandr brand identity based brand.yml brand identity.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/brandr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"brandr: Brand Identity Management Using brand.yml Standard — brandr-package","title":"brandr: Brand Identity Management Using brand.yml Standard — brandr-package","text":"system facilitate brand identity management using brand.yml standard, providing functions consistently access apply brand colors, typography, visual elements across R projects.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/brandr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"brandr: Brand Identity Management Using brand.yml Standard — brandr-package","text":"Maintainer: Daniel Vartanian danvartan@gmail.com (ORCID) [conceptor, copyright holder]","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/color_brand_sequential.html","id":null,"dir":"Reference","previous_headings":"","what":"Brand color palettes — color_brand_sequential","title":"Brand color palettes — color_brand_sequential","text":"color_brand_* functions wrappers interpolate_colors() sequential, diverging, qualitative brand color palettes. serve facilitators getting colors used brand scale.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/color_brand_sequential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brand color palettes — color_brand_sequential","text":"","code":"color_brand_sequential(n, alpha = NULL, direction = 1)  color_brand_diverging(n, alpha = NULL, direction = 1)  color_brand_qualitative(n, alpha = NULL, direction = 1)"},{"path":"https://danielvartan.github.io/brandr/dev/reference/color_brand_sequential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Brand color palettes — color_brand_sequential","text":"n parameter accepts two types inputs: value integer number type \"seq\" \"div\", function return discrete color spectrum n colors value integer number type \"qual\", function return n colors colors parameter, repeating necessary value numeric vector 0 1, function return color positions n considering continuous color spectrum ranging 0 1 alpha (Optional) number 0 1, indicating transparency colors (Default: NULL). direction (Optional) number (1 -1) indicating direction colors. 1, order remains . -1, order reversed. (Default: 1).","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/color_brand_sequential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Brand color palettes — color_brand_sequential","text":"character vector hexadecimal color codes.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/color_brand_sequential.html","id":"path-to-brand-yml","dir":"Reference","previous_headings":"","what":"Path to _brand.yml","title":"Brand color palettes — color_brand_sequential","text":"brandr always look _brand.yml file root directory project. file found, error message displayed. can also set path file manually using options() function:","code":"options(BRANDR_BRAND_YML = \"PATH_TO_BRAND.YML\")"},{"path":"https://danielvartan.github.io/brandr/dev/reference/color_brand_sequential.html","id":"brand-color-scales","dir":"Reference","previous_headings":"","what":"Brand Color Scales","title":"Brand color palettes — color_brand_sequential","text":"control colors brand color scale, assign desired hexadecimal color codes character vector following options: BRANDR_COLOR_SEQUENTIAL: sequential color scales BRANDR_COLOR_DIVERGING:  diverging color scales BRANDR_COLOR_QUALITATIVE: qualitative color scales can use get_brand_color() get hexadecimal color codes _brand.yml file. Example:","code":"options(   BRANDR_COLOR_SEQUENTIAL =     get_brand_color(c(\"primary\", \"secondary\")),   BRANDR_COLOR_DIVERGING =     get_brand_color(c(\"primary\", \"white\", \"secondary\")),   BRANDR_COLOR_QUALITATIVE =     get_brand_color(c(\"primary\", \"secondary\", \"tertiary\")) )"},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/color_brand_sequential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Brand color palettes — color_brand_sequential","text":"","code":"color_brand_sequential(5) #> [1] \"#390963\" \"#892B4F\" \"#DA4E3C\" \"#EA7220\" \"#FB9706\" #> [1] \"#390963\" \"#892B4F\" \"#DA4E3C\" \"#EA7220\" \"#FB9706\" # Expected  color_brand_diverging(5) #> [1] \"#390963\" \"#9C84B1\" \"#FFFFFF\" \"#FDCB82\" \"#FB9706\" #> [1] \"#390963\" \"#9C84B1\" \"#FFFFFF\" \"#FDCB82\" \"#FB9706\" # Expected  color_brand_qualitative(5) #> [1] \"#DA4E3C\" \"#390963\" \"#FB9706\" \"#DA4E3C\" \"#390963\" #> [1] \"#DA4E3C\" \"#390963\" \"#FB9706\" \"#DA4E3C\" \"#390963\" # Expected  color_brand_qualitative(3, alpha = 0.5) #> [1] \"#DA4E3C80\" \"#39096380\" \"#FB970680\" #> [1] \"#DA4E3C80\" \"#39096380\" \"#FB970680\" # Expected"},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Get brand colors — get_brand_color","title":"Get brand colors — get_brand_color","text":"get_brand_color() retrieves color codes _brand.yml file.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get brand colors — get_brand_color","text":"","code":"get_brand_color(color, alpha = NULL)"},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get brand colors — get_brand_color","text":"color character vector indicating name colors present color section _brand.yml file. alpha (Optional) number 0 1, indicating transparency colors (Default: NULL).","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get brand colors — get_brand_color","text":"character vector hexadecimal color codes.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color.html","id":"path-to-brand-yml","dir":"Reference","previous_headings":"","what":"Path to _brand.yml","title":"Get brand colors — get_brand_color","text":"brandr always look _brand.yml file root directory project. file found, error message displayed. can also set path file manually using options() function:","code":"options(BRANDR_BRAND_YML = \"PATH_TO_BRAND.YML\")"},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get brand colors — get_brand_color","text":"","code":"get_brand_color(\"primary\") #> [1] \"#DA4E3C\" #> [1] \"#DA4E3C\" # Expected  get_brand_color(\"secondary\") #> [1] \"#390963\" #> [1] \"#390963\" # Expected  get_brand_color(\"tertiary\") #> [1] \"#FB9706\" #> [1] \"#FB9706\" # Expected  get_brand_color(\"tertiary\", alpha = 0.5) #> [1] \"#FB970680\" #> [1] \"#FB970680\" # Expected  get_brand_color(c(\"primary\", \"secondary\")) #> [1] \"#DA4E3C\" \"#390963\" #> [1] \"#DA4E3C\" \"#390963\" # Expected  get_brand_color(c(\"red\", \"purple\", \"orange\")) #> [1] \"#DA4E3C\" \"#390963\" \"#F06F20\" #> [1] \"#DA4E3C\" \"#390963\" \"#F06F20\" # Expected"},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_mix.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a mix of brand colors — get_brand_color_mix","title":"Get a mix of brand colors — get_brand_color_mix","text":"get_brand_color_mix() mixes two specific brand colors.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_mix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a mix of brand colors — get_brand_color_mix","text":"","code":"get_brand_color_mix(   position = 500,   color_1 = \"primary\",   color_2 = \"secondary\",   alpha = 0.5 )"},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_mix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a mix of brand colors — get_brand_color_mix","text":"position (Optional) numeric vector indicating position brand color range tints. range positions 0 1000 (Default: 500). color_1, color_2 (Optional) character string indicating name color present color section _brand.yml file (Default: primary, secondary). alpha (Optional) number 0 1 indicating alpha (transparency) color mix (Default: 0.5).","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_mix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a mix of brand colors — get_brand_color_mix","text":"character vector hexadecimal color codes.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_mix.html","id":"path-to-brand-yml","dir":"Reference","previous_headings":"","what":"Path to _brand.yml","title":"Get a mix of brand colors — get_brand_color_mix","text":"brandr always look _brand.yml file root directory project. file found, error message displayed. can also set path file manually using options() function:","code":"options(BRANDR_BRAND_YML = \"PATH_TO_BRAND.YML\")"},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_mix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a mix of brand colors — get_brand_color_mix","text":"","code":"get_brand_color_mix(   position = 500,   color_1 = \"primary\",   color_2 = \"secondary\",   alpha = 0.5 ) #> [1] \"#8A2C50\" #> [1] \"#8A2C50\" # Expected  get_brand_color_mix(   position = c(250, 500, 750),   color_1 = \"primary\",   color_2 = \"secondary\",   alpha = 0.25 ) #> [1] \"#591E23\" \"#B23D46\" \"#D89EA2\" #> [1] \"#591E23\" \"#B23D46\" \"#D89EA2\" # Expected"},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_tint.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tints of brand colors — get_brand_color_tint","title":"Get tints of brand colors — get_brand_color_tint","text":"get_brand_color_tint() generates range tints (color variations) specific brand color, black (position 0) brand color (position 500) white (position 1000).","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_tint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tints of brand colors — get_brand_color_tint","text":"","code":"get_brand_color_tint(position = 500, color = \"primary\")"},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_tint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tints of brand colors — get_brand_color_tint","text":"position (Optional) numeric vector indicating position brand color range tints. range positions 0 1000 (Default: 500). color (Optional) character string indicating name color present color section _brand.yml file (Default: \"primary\").","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_tint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tints of brand colors — get_brand_color_tint","text":"character vector hexadecimal color codes.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_tint.html","id":"path-to-brand-yml","dir":"Reference","previous_headings":"","what":"Path to _brand.yml","title":"Get tints of brand colors — get_brand_color_tint","text":"brandr always look _brand.yml file root directory project. file found, error message displayed. can also set path file manually using options() function:","code":"options(BRANDR_BRAND_YML = \"PATH_TO_BRAND.YML\")"},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_color_tint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tints of brand colors — get_brand_color_tint","text":"","code":"seq(0, 1000, 250) #> [1]    0  250  500  750 1000 #> [1]    0  250  500  750 1000 # Expected  get_brand_color_tint(seq(0, 1000, 250), color = \"primary\") #> [1] \"#000000\" \"#6D271E\" \"#DA4E3C\" \"#ECA69D\" \"#FFFFFF\" #> [1] \"#000000\" \"#6D271E\" \"#DA4E3C\" \"#ECA69D\" \"#FFFFFF\" # Expected"},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_font.html","id":null,"dir":"Reference","previous_headings":"","what":"Get brand fonts/typefaces — get_brand_font","title":"Get brand fonts/typefaces — get_brand_font","text":"get_brand_font() retrieves names fonts/typefaces _brand.yml file.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get brand fonts/typefaces — get_brand_font","text":"","code":"get_brand_font(font)"},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_font.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get brand fonts/typefaces — get_brand_font","text":"font character vector indicating name fonts/typefaces categories present typography section _brand.yml file.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_font.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get brand fonts/typefaces — get_brand_font","text":"character vector fonts/typeface names.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_font.html","id":"path-to-brand-yml","dir":"Reference","previous_headings":"","what":"Path to _brand.yml","title":"Get brand fonts/typefaces — get_brand_font","text":"brandr always look _brand.yml file root directory project. file found, error message displayed. can also set path file manually using options() function:","code":"options(BRANDR_BRAND_YML = \"PATH_TO_BRAND.YML\")"},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/get_brand_font.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get brand fonts/typefaces — get_brand_font","text":"","code":"get_brand_font(\"base\") #> [1] \"Open Sans\" #> [1] \"Open Sans\" # Expected  get_brand_font(\"headings\") #> [1] \"Rubik\" #> [1] \"Rubik\" # Expected  get_brand_font(\"monospace\") #> [1] \"IBM Plex Mono\" #> [1] \"IBM Plex Mono\" # Expected  get_brand_font(\"monospace-block\") #> [1] \"IBM Plex Mono\" #> [1] \"IBM Plex Mono\" # Expected  get_brand_font(c(\"base\", \"headings\")) #> [1] \"Open Sans\" \"Rubik\"     #> [1] \"Open Sans\" \"Rubik\" # Expected"},{"path":"https://danielvartan.github.io/brandr/dev/reference/interpolate_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolate colors — interpolate_colors","title":"Interpolate colors — interpolate_colors","text":"interpolate_colors() interpolate colors sequential, diverging, qualitative color scales.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/interpolate_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolate colors — interpolate_colors","text":"","code":"interpolate_colors(   n,   colors = getOption(\"BRANDR_COLOR_SEQUENTIAL\"),   type = \"seq\",   alpha = NULL,   direction = 1,   ... )"},{"path":"https://danielvartan.github.io/brandr/dev/reference/interpolate_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolate colors — interpolate_colors","text":"n parameter accepts two types inputs: value integer number type \"seq\" \"div\", function return discrete color spectrum n colors value integer number type \"qual\", function return n colors colors parameter, repeating necessary value numeric vector 0 1, function return color positions n considering continuous color spectrum ranging 0 1 colors (Optional) character vector colors use scale. NULL, brandr choose colors based type argument. type (Optional) character string indicating type color scale: \"seq\"/\"sequential\", \"div\"/\"diverging\", \"qual\"/\"qualitative\" (Default: seq). alpha (Optional) number 0 1, indicating transparency colors (Default: NULL). direction (Optional) number (1 -1) indicating direction colors. 1, order remains . -1, order reversed. (Default: 1). ... Additional arguments passed colorRampPalette() creating color ramp. valid type \"seq\" \"div\".","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/interpolate_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolate colors — interpolate_colors","text":"character vector hexadecimal color codes.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/interpolate_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolate colors — interpolate_colors","text":"","code":"interpolate_colors(3, colors = c(\"red\", \"blue\"), type = \"seq\") #> [1] \"#FF0000\" \"#7F007F\" \"#0000FF\" #> [1] \"#FF0000\" \"#7F007F\" \"#0000FF\" # Expected  interpolate_colors(3, colors = c(\"red\", \"blue\"), direction = -1) #> [1] \"#0000FF\" \"#7F007F\" \"#FF0000\" #> [1] \"#0000FF\" \"#7F007F\" \"#FF0000\" # Expected  interpolate_colors(3, colors = c(\"red\", \"blue\"), alpha = 0.5) #> [1] \"#FF000080\" \"#7F007F80\" \"#0000FF80\" #> [1] \"#FF000080\" \"#7F007F80\" \"#0000FF80\" # Expected  # `type = \"seq\"` and `type = \"div\"` produce the same result interpolate_colors(3, colors = c(\"red\", \"white\", \"blue\"), type = \"div\") #> [1] \"#FF0000\" \"#FFFFFF\" \"#0000FF\" #> [1] \"#FF0000\" \"#FFFFFF\" \"#0000FF\" # Expected  interpolate_colors(3, colors = c(\"red\", \"blue\"), type = \"qual\") #> [1] \"#FF0000\" \"#0000FF\" \"#FF0000\" #> [1] \"#FF0000\" \"#0000FF\" \"#FF0000\" # Expected"},{"path":"https://danielvartan.github.io/brandr/dev/reference/scale_brand.html","id":null,"dir":"Reference","previous_headings":"","what":"Brand color scales for ggplot2 — scale_brand","title":"Brand color scales for ggplot2 — scale_brand","text":"scale_*_brand_*() functions provide color scales ggplot2 based brand colors defined _brand.yml file. functions create discrete, continuous, binned scales sequential, diverging, qualitative color palettes match brand identity.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/scale_brand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Brand color scales for ggplot2 — scale_brand","text":"","code":"scale_brand(   aesthetics = \"color\",   scale_type = \"c\",   color_type = \"seq\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_color_brand_d(   aesthetics = \"color\",   scale_type = \"d\",   color_type = \"qual\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_color_brand_c(   aesthetics = \"color\",   scale_type = \"c\",   color_type = \"seq\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_color_brand_b(   aesthetics = \"color\",   scale_type = \"b\",   color_type = \"seq\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_colour_brand_d(   aesthetics = \"color\",   scale_type = \"d\",   color_type = \"qual\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_colour_brand_c(   aesthetics = \"color\",   scale_type = \"c\",   color_type = \"seq\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_colour_brand_b(   aesthetics = \"color\",   scale_type = \"b\",   color_type = \"seq\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_fill_brand_d(   aesthetics = \"fill\",   scale_type = \"d\",   color_type = \"qual\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_fill_brand_c(   aesthetics = \"fill\",   scale_type = \"c\",   color_type = \"seq\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )  scale_fill_brand_b(   aesthetics = \"fill\",   scale_type = \"b\",   color_type = \"seq\",   alpha = NULL,   direction = 1,   na.value = NA,   reverse = FALSE,   ... )"},{"path":"https://danielvartan.github.io/brandr/dev/reference/scale_brand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Brand color scales for ggplot2 — scale_brand","text":"aesthetics (Optional) character string indicating name aesthetic scale (e.g., \"color\", \"fill\") (Default: \"color\"). scale_type (Optional) character string indicating type scale: \"d\"/\"discrete\", \"c\"/\"continuous\", \"b\"/\"binned\" (Default: \"c\"). color_type (Optional) character string indicating type color scale: \"seq\"/\"sequential\", \"div\"/\"diverging\", \"qual\"/\"qualitative\" (Default: \"seq\"). alpha (Optional) number 0 1, indicating transparency colors (Default: NULL). direction (Optional) number (1 -1) indicating direction colors. 1, order remains . -1, order reversed. (Default: 1). na.value (Optional) character string indicating color use missing values. must contain hexadecimal color code one values output colors() (Default: NA). reverse (Optional) logical flag indicating whether legend color bar reversed (Default: FALSE). ... Additional arguments passed ggplot2 scale function: discrete_scale(), continuous_scale(), binned_scale().","code":""},{"path":"https://danielvartan.github.io/brandr/dev/reference/scale_brand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Brand color scales for ggplot2 — scale_brand","text":"ggplot2 scale object.","code":""},{"path":[]},{"path":"https://danielvartan.github.io/brandr/dev/reference/scale_brand.html","id":"path-to-brand-yml","dir":"Reference","previous_headings":"","what":"Path to _brand.yml","title":"Brand color scales for ggplot2 — scale_brand","text":"brandr always look _brand.yml file root directory project. file found, error message displayed. can also set path file manually using options() function:","code":"options(BRANDR_BRAND_YML = \"PATH_TO_BRAND.YML\")"},{"path":"https://danielvartan.github.io/brandr/dev/reference/scale_brand.html","id":"brand-color-scales","dir":"Reference","previous_headings":"","what":"Brand Color Scales","title":"Brand color scales for ggplot2 — scale_brand","text":"control colors brand color scale, assign desired hexadecimal color codes character vector following options: BRANDR_COLOR_SEQUENTIAL: sequential color scales BRANDR_COLOR_DIVERGING:  diverging color scales BRANDR_COLOR_QUALITATIVE: qualitative color scales can use get_brand_color() get hexadecimal color codes _brand.yml file. Example:","code":"options(   BRANDR_COLOR_SEQUENTIAL =     get_brand_color(c(\"primary\", \"secondary\")),   BRANDR_COLOR_DIVERGING =     get_brand_color(c(\"primary\", \"white\", \"secondary\")),   BRANDR_COLOR_QUALITATIVE =     get_brand_color(c(\"primary\", \"secondary\", \"tertiary\")) )"},{"path":"https://danielvartan.github.io/brandr/dev/reference/scale_brand.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Brand color scales for ggplot2 — scale_brand","text":"","code":"if (requireNamespace(       c(\"palmerpenguins\", \"tidyr\", \"ggplot2\"),       quiet = TRUE     )    ) {   library(ggplot2)   library(palmerpenguins)   library(tidyr)    penguins |>     drop_na(bill_length_mm, species) |>     ggplot(aes(x = species, y = bill_length_mm, fill = species)) +     geom_boxplot(outlier.color = get_brand_color(\"red\")) +     geom_jitter(width = 0.2, alpha = 0.1) +     scale_fill_brand_d(alpha = 0.5) +     labs(       x = \"Species\",       y = \"Bill Length (mm)\",       fill = \"Species\"     ) +     theme_bw() } #>  #> Attaching package: ‘palmerpenguins’ #> The following objects are masked from ‘package:datasets’: #>  #>     penguins, penguins_raw   if (requireNamespace(       c(\"palmerpenguins\", \"tidyr\", \"ggplot2\"),       quiet = TRUE     )    ) {   library(ggplot2)   library(palmerpenguins)   library(tidyr)    penguins |>   drop_na(flipper_length_mm, species) |>     ggplot(aes(x = flipper_length_mm, fill = species)) +       geom_histogram(alpha = 0.5, bins = 30, position = \"identity\") +       scale_fill_brand_d() +       labs(         x = \"Flipper Length (mm)\",         y = \"Frequency\",         fill = \"Species\"       ) +       theme_bw() }   if (requireNamespace(       c(\"palmerpenguins\", \"tidyr\", \"ggplot2\"),       quiet = TRUE     )    ) {   library(ggplot2)   library(palmerpenguins)   library(tidyr)    penguins |>     drop_na(flipper_length_mm, body_mass_g, species) |>     ggplot(       aes(         x = flipper_length_mm,         y = body_mass_g,         color = species,         shape = species       )     ) +     geom_point(size = 2) +     geom_smooth(method = \"lm\", formula = y ~ x, se = FALSE) +     scale_color_brand_d() +     labs(       x = \"Flipper Length (mm)\",       y = \"Body Mass (g)\",       color = \"Species\",       shape = \"Species\"     ) +     theme_bw() }   if (requireNamespace(\"ggplot2\", quiet = TRUE)) {   library(ggplot2)    faithfuld |>     ggplot(aes(waiting, eruptions, fill = density)) +     geom_raster() +     scale_fill_brand_b() +     labs(       x = \"Waiting Time to Next Eruption (min)\",       y = \"Eruption Time (min)\",       fill = \"Density\"     ) +     theme_bw() }   if (requireNamespace(\"ggplot2\", quiet = TRUE)) {   library(ggplot2)   library(hexbin)    data.frame(x = runif(10000), y = runif(10000)) |>     ggplot(aes(x, y)) +     geom_hex() +     coord_fixed() +     scale_fill_brand_c() +     labs(fill = \"\") +     theme_bw() }"},{"path":"https://danielvartan.github.io/brandr/dev/news/index.html","id":"brandr-0109000-development-version","dir":"Changelog","previous_headings":"","what":"brandr 0.1.0.9000 Development version","title":"brandr 0.1.0.9000 Development version","text":"Changed brandr logo design.","code":""},{"path":"https://danielvartan.github.io/brandr/dev/news/index.html","id":"brandr-010","dir":"Changelog","previous_headings":"","what":"brandr 0.1.0","title":"brandr 0.1.0","text":"CRAN release: 2025-03-10 First CRAN release. 🎉","code":""},{"path":"https://danielvartan.github.io/brandr/dev/news/index.html","id":"brandr-0009000","dir":"Changelog","previous_headings":"","what":"brandr 0.0.0.9000","title":"brandr 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
